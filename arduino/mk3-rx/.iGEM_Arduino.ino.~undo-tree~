(undo-tree-save-format-version . 1)
"a75316e71e0e25d2bab0f0b9d683b1a2417c3194"
[nil nil nil nil (26334 13651 759534 952000) 0 nil]
([nil nil ((1103 . 1105) (t 26334 8830 97847 489000)) nil (26334 13651 759534 8000) 0 nil])
([nil nil ((1175 . 1176) 1104) nil (26334 13651 759533 245000) 0 nil])
([nil nil ((341 . 358) (135 . 138) (134 . 135) (113 . 134) (112 . 113) (307 . 316) (304 . 307) (t 26334 8987 231181 436000)) nil (26334 13651 759532 240000) 0 nil])
([nil nil ((359 . 360)) nil (26334 13651 759530 728000) 0 nil])
([nil nil ((nil rear-nonsticky nil 362 . 363) (#("
" 0 1 (fontified nil)) . -390) (360 . 391) 359 (t 26334 9021 831181 572000)) nil (26334 13651 759529 882000) 0 nil])
([nil nil ((#("  pinMode(buttonPin, OUTPUT);
" 0 1 (fontified t) 1 2 (rear-nonsticky t fontified t) 2 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-2-face) fontified t) 10 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-2-face) fontified t) 28 29 (fontified t) 29 30 (fontified t)) . 361) (undo-tree-id215 . -10) (undo-tree-id216 . 1) (undo-tree-id217 . -10) (undo-tree-id218 . -10) (undo-tree-id219 . -29) (undo-tree-id220 . -10) 371) nil (26334 13651 759528 319000) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-type-face fontified t)) . -1139) (undo-tree-id214 . -1) 1140 (1139 . 1140) (t 26334 9079 21181 799000)) nil (26334 13651 759521 764000) 0 nil])
([nil nil ((1165 . 1171) (1161 . 1166)) nil (26334 13651 759519 790000) 0 nil])
([nil nil ((150 . 162) (#("j" 0 1 (face font-lock-variable-name-face fontified t)) . -150) (undo-tree-id213 . -1) 151 (140 . 151) (139 . 140)) nil (26334 13651 759518 688000) 0 nil])
([nil nil ((1194 . 1207) (t 26334 9224 574515 694000)) nil (26334 13651 759516 674000) 0 nil])
([nil nil ((1225 . 1241) (#("o" 0 1 (fontified t)) . -1225) (undo-tree-id206 . -1) (#("n" 0 1 (fontified t)) . -1226) (undo-tree-id207 . -1) (#("S" 0 1 (fontified t)) . -1227) (undo-tree-id208 . -1) (#("t" 0 1 (fontified t)) . -1228) (undo-tree-id209 . -1) (#("a" 0 1 (fontified t)) . -1229) (undo-tree-id210 . -1) (#("t" 0 1 (fontified t)) . -1230) (undo-tree-id211 . -1) (#("e" 0 1 (fontified t)) . -1231) (undo-tree-id212 . -1) 1232 (1222 . 1232) (1220 . 1223) (1215 . 1220) (1211 . 1215) (1212 . 1214) (#("    " 0 4 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1211) (1211 . 1215) (1210 . 1212) (1208 . 1211)) nil (26334 13651 759514 572000) 0 nil])
([nil nil ((1251 . 1257) (1245 . 1251) (1246 . 1250) (#("      " 0 6 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 1245) (1245 . 1251) (1244 . 1246) (1242 . 1245)) nil (26334 13651 759505 362000) 0 nil])
([nil nil ((184 . 189) (163 . 184) (162 . 163) (t 26334 9254 67849 143000)) nil (26334 13651 759503 845000) 0 nil])
([nil nil ((1239 . 1260) (1234 . 1239) (1235 . 1236) (1242 . 1243) (#("f" 0 1 (fontified t)) . -1242) (undo-tree-id197 . -1) 1243 (1242 . 1243) (#("while" 0 5 (face font-lock-keyword-face fontified t)) . -1242) (undo-tree-id198 . -5) 1247 (1230 . 1234) (#("H" 0 1 (fontified t)) . -1230) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (#("I" 0 1 (fontified t)) . -1231) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#("G" 0 1 (fontified t)) . -1232) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("H" 0 1 (fontified t)) . -1233) (undo-tree-id205 . -1) 1234 (t 26334 9303 867849 339000)) nil (26334 13651 759500 958000) 0 nil])
([nil nil ((1286 . 1292) (#("=" 0 1 (fontified t)) . -1286) (undo-tree-id163 . -1) 1287 (1269 . 1287) (#("l" 0 1 (face font-lock-type-face fontified t)) . -1269) (undo-tree-id164 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -1270) (undo-tree-id165 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1271) (undo-tree-id166 . -1) (#(" " 0 1 (fontified t)) . -1272) (undo-tree-id167 . -1) 1273 (1269 . 1273) (#("L" 0 1 (face font-lock-type-face fontified t)) . -1269) (undo-tree-id168 . -1) (#("E" 0 1 (face font-lock-type-face fontified t)) . -1270) (undo-tree-id169 . -1) (#("T" 0 1 (face font-lock-type-face fontified t)) . -1271) (undo-tree-id170 . -1) (#(" " 0 1 (fontified t)) . -1272) (undo-tree-id171 . -1) 1273 (1269 . 1273) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1269) (undo-tree-id172 . -1) (#(" " 0 1 (fontified t)) . -1270) (undo-tree-id173 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1271) (undo-tree-id174 . -1) (#("b" 0 1 (face font-lock-type-face fontified t)) . -1272) (undo-tree-id175 . -1) 1273 (#("u" 0 1 (face font-lock-type-face fontified t)) . -1273) (undo-tree-id176 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1274) (undo-tree-id177 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1275) (undo-tree-id178 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -1276) (undo-tree-id179 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1277) (undo-tree-id180 . -1) (#("S" 0 1 (face font-lock-type-face fontified t)) . -1278) (undo-tree-id181 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1279) (undo-tree-id182 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -1280) (undo-tree-id183 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1281) (undo-tree-id184 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -1282) (undo-tree-id185 . -1) (#(" " 0 1 (fontified t)) . -1283) (undo-tree-id186 . -1) (#("=" 0 1 (fontified t)) . -1284) (undo-tree-id187 . -1) (#("=" 0 1 (fontified t)) . -1285) (undo-tree-id188 . -1) (#(" " 0 1 (fontified t)) . -1286) (undo-tree-id189 . -1) (#("H" 0 1 (fontified t)) . -1287) (undo-tree-id190 . -1) (#("I" 0 1 (fontified t)) . -1288) (undo-tree-id191 . -1) (#("G" 0 1 (fontified t)) . -1289) (undo-tree-id192 . -1) (#("H" 0 1 (fontified t)) . -1290) (undo-tree-id193 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1291) (undo-tree-id194 . -1) (#(" " 0 1 (fontified t)) . -1292) (undo-tree-id195 . -1) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1293) (undo-tree-id196 . -1) 1294) nil (26334 13651 759484 476000) 0 nil])
([nil nil ((#("      delay 
" 0 6 (fontified t) 6 11 (fontified t) 11 13 (fontified t)) . 1293) (undo-tree-id158 . -11) (undo-tree-id159 . -11) (undo-tree-id160 . -11) (undo-tree-id161 . -12) (undo-tree-id162 . -11) 1304) nil (26334 13651 759445 788000) 0 nil])
([nil nil ((1294 . 1295) (#(" " 0 1 (fontified t)) . -1294) (undo-tree-id155 . -1) (#(" " 0 1 (fontified t)) . -1295) (undo-tree-id156 . -1) (#(" " 0 1 (fontified t)) . -1296) (undo-tree-id157 . -1) 1297) nil (26334 13651 759439 525000) 0 nil])
([nil nil ((1343 . 1348) (1322 . 1343) (1303 . 1322) (1301 . 1304) (1299 . 1301) (1298 . 1299) (#(" " 0 1 (fontified t)) . -1298) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 1299 (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 1299)) nil (26334 13651 759434 995000) 0 nil])
([nil nil ((1377 . 1378) (1356 . 1377) (#("b" 0 1 (fontified t)) . -1356) (undo-tree-id143 . -1) (#("u" 0 1 (fontified t)) . -1357) (undo-tree-id144 . -1) (#("t" 0 1 (fontified t)) . -1358) (undo-tree-id145 . -1) (#("t" 0 1 (fontified t)) . -1359) (undo-tree-id146 . -1) (#("o" 0 1 (fontified t)) . -1360) (undo-tree-id147 . -1) (#("n" 0 1 (fontified t)) . -1361) (undo-tree-id148 . -1) 1362 (1356 . 1362) (#("B" 0 1 (fontified t)) . -1356) (undo-tree-id149 . -1) (#("U" 0 1 (fontified t)) . -1357) (undo-tree-id150 . -1) (#("T" 0 1 (fontified t)) . -1358) (undo-tree-id151 . -1) 1359 (1356 . 1359) (1352 . 1356) (1353 . 1355) (#("    " 0 4 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1352) (1352 . 1356) (1351 . 1353) (1349 . 1352)) nil (26334 13651 759428 962000) 0 nil])
([nil nil ((1390 . 1394) (1383 . 1390) (1378 . 1383)) nil (26334 13651 759417 906000) 0 nil])
([nil nil ((209 . 225) (208 . 209) (t 26334 9415 237849 779000)) nil (26334 13651 759416 946000) 0 nil])
([nil nil ((227 . 235) (224 . 227) (t 26334 9489 871183 397000)) nil (26334 13651 759415 719000) 0 nil])
([nil nil ((#("  delay(100);
" 0 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-2-face) fontified t) 8 11 (face font-lock-number-face fontified t) 11 12 (face (rainbow-delimiters-depth-2-face) fontified t) 12 14 (fontified t)) . 850) (undo-tree-id138 . -12) (undo-tree-id139 . -12) (undo-tree-id140 . -12) (undo-tree-id141 . -13) (undo-tree-id142 . -12) 862 (t 26334 9508 67850 135000)) nil (26334 13651 759414 117000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -848) (undo-tree-id137 . -1) 849) nil (26334 13651 759408 313000) 0 nil])
([nil nil ((208 . 209) (t 26334 9537 511183 585000)) nil (26334 13651 759406 492000) 0 nil])
([nil nil ((159 . 160) (156 . 159) (140 . 156) (139 . 140)) nil (26334 13651 759405 624000) 0 nil])
([nil nil ((1158 . 1163) (1155 . 1158) (t 26334 9563 371183 687000)) nil (26334 13651 759404 650000) 0 nil])
([nil nil ((1162 . 1177)) nil (26334 13651 759403 754000) 0 nil])
([nil nil ((1178 . 1192) (1177 . 1178) (1178 . 1179)) nil (26334 13651 759403 23000) 0 nil])
([nil nil ((164 . 175) (160 . 164) (159 . 160)) nil (26334 13651 759402 53000) 0 nil])
([nil nil ((184 . 192) (176 . 184) (175 . 176)) nil (26334 13651 759401 69000) 0 nil])
([nil nil ((1225 . 1237) (t 26334 9648 304517 355000)) nil (26334 13651 759400 158000) 0 nil])
([nil nil ((1237 . 1244)) nil (26334 13651 759399 278000) 0 nil])
([nil nil ((1252 . 1264) (1248 . 1252) (1249 . 1251) (#("    " 0 4 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1248) (1248 . 1252) (1247 . 1249) (1245 . 1248)) nil (26334 13651 759398 277000) 0 nil])
([nil nil ((nil fontified t 1248 . 1255) (nil face font-lock-variable-name-face 1248 . 1255) (#("mixerTime" 0 9 (face font-lock-variable-name-face fontified t)) . -1248) (1257 . 1264) (#("mixerTime" 0 9 (fontified t)) . -1226) (1235 . 1242) (nil fontified t 164 . 171) (nil face font-lock-variable-name-face 164 . 171) (#("mixerTime" 0 9 (face font-lock-variable-name-face fontified t)) . -164) (173 . 180)) nil (26334 13651 759396 437000) 0 nil])
([nil nil ((1258 . 1270)) nil (26334 13651 759394 629000) 0 nil])
([nil nil ((#("currentTime" 0 11 (fontified t)) . -1250) (1261 . 1268) (#("currentTime" 0 11 (fontified t)) . -1208) (1219 . 1226) (nil face font-lock-variable-name-face 266 . 273) (#("currentTime" 0 11 (face font-lock-variable-name-face)) . -266) (277 . 284)) nil (26334 13651 759393 593000) 0 nil])
([nil nil ((1253 . 1254) (1248 . 1252) (1240 . 1249) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1240) (undo-tree-id134 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1241) (undo-tree-id135 . -1) 1242 (1228 . 1232) (#("1000" 0 4 (face font-lock-number-face fontified t)) . -1228) (undo-tree-id136 . -4) 1232 (1240 . 1242) (1235 . 1240)) nil (26334 13651 759391 349000) 0 nil])
([nil nil ((1203 . 1204) (#("0" 0 1 (face font-lock-number-face fontified t)) . -1203) (undo-tree-id133 . -1) 1204 (1282 . 1297) (1277 . 1282)) nil (26334 13651 759386 693000) 0 nil])
([nil nil ((1296 . 1297) (#("1" 0 1 (face font-lock-number-face fontified t)) . -1296) (undo-tree-id132 . -1) 1297) nil (26334 13651 759384 595000) 0 nil])
([nil nil ((#("  fluidIn(flow);
  delay(time);
" 0 2 (fontified t) 2 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-2-face) fontified t) 10 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-2-face) fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-2-face) fontified t) 25 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-2-face) fontified t) 30 31 (fontified t) 31 32 (fontified t)) . 1303) (undo-tree-id127 . -31) (undo-tree-id128 . -15) (undo-tree-id129 . -31) (undo-tree-id130 . -31) (undo-tree-id131 . -31) 1334) nil (26334 13651 759382 666000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1304 . 1305) (#("
" 0 1 (fontified nil)) . -1422) (1302 . 1423) 1298) nil (26334 13651 759377 402000) 0 nil])
([nil nil ((1323 . 1324) (#("1" 0 1 (face font-lock-number-face fontified t)) . -1323) (undo-tree-id126 . -1) 1324) nil (26334 13651 759376 304000) 0 nil])
([nil nil ((1365 . 1368) (#("I" 0 1 (fontified t)) . -1365) (undo-tree-id124 . -1) (#("n" 0 1 (fontified t)) . -1366) (undo-tree-id125 . -1) 1367) nil (26334 13651 759374 114000) 0 nil])
([nil nil ((1417 . 1418) (#("0" 0 1 (face font-lock-number-face fontified t)) . -1417) (undo-tree-id123 . -1) 1418) nil (26334 13651 759371 78000) 0 nil])
([nil nil ((1297 . 1298) (1418 . 1419)) nil (26334 13651 759369 64000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -1415) (undo-tree-id121 . -1) 1416 (#("=" 0 1 (fontified t)) . -1294) (undo-tree-id122 . -1) 1295) nil (26334 13651 759367 834000) 0 nil])
([nil nil ((#("  fluidOut(flow);
  delay(time);
" 0 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-2-face) fontified t) 11 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-2-face) fontified t) 16 18 (fontified t) 18 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-2-face) fontified t) 26 30 (fontified t) 30 31 (face (rainbow-delimiters-depth-2-face) fontified t) 31 33 (fontified t)) . 1424) (undo-tree-id116 . -32) (undo-tree-id117 . -16) (undo-tree-id118 . -32) (undo-tree-id119 . -32) (undo-tree-id120 . -32) 1456) nil (26334 13651 759364 605000) 0 nil])
([nil nil ((1621 . 1626) (#("/" 0 1 (fontified t)) . -1621) (undo-tree-id105 . -1) (#("/" 0 1 (face font-lock-comment-face fontified t)) . -1622) (undo-tree-id106 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1623) (undo-tree-id107 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -1624) (undo-tree-id108 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1625) (undo-tree-id109 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1626) (undo-tree-id110 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -1627) (undo-tree-id111 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1628) (undo-tree-id112 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -1629) (undo-tree-id113 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -1630) (undo-tree-id114 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -1631) (undo-tree-id115 . -1) 1632 (t 26334 9812 924518 5000)) nil (26334 13651 759357 73000) 0 nil])
([nil nil ((250 . 255) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -250) (undo-tree-id93 . -1) 251 (250 . 251) (#("I" 0 1 (face font-lock-variable-name-face fontified t)) . -250) (undo-tree-id94 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -251) (undo-tree-id95 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -252) (undo-tree-id96 . -1) 253 (247 . 253) (#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -247) (undo-tree-id97 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -248) (undo-tree-id98 . -1) (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -249) (undo-tree-id99 . -1) (#("S" 0 1 (face font-lock-variable-name-face fontified t)) . -250) (undo-tree-id100 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -251) (undo-tree-id101 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -252) (undo-tree-id102 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -253) (undo-tree-id103 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -254) (undo-tree-id104 . -1) 255 (t 26334 9856 524518 178000)) nil (26334 13651 759342 725000) 0 nil])
([nil nil ((247 . 255) (#("rogInd" 0 3 (face font-lock-variable-name-face fontified nil) 3 4 (face font-lock-variable-name-face fontified nil) 4 5 (face font-lock-variable-name-face fontified nil) 5 6 (face font-lock-variable-name-face fontified nil)) . 247) (undo-tree-id86 . -3) (undo-tree-id87 . -6) (undo-tree-id88 . -3) (250 . 253) (#("i" 0 1 (face font-lock-variable-name-face fontified nil)) . 250) (undo-tree-id89 . -1) (250 . 251) (#("Index" 0 5 (face font-lock-variable-name-face fontified t)) . 250) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4)) nil (26334 13651 759325 991000) 0 nil])
([nil nil ((nil fontified t 254 . 255) (t 26334 9856 524518 178000) (nil face font-lock-variable-name-face 254 . 255) (t 26334 9856 524518 178000) (nil fontified t 253 . 254) (t 26334 9856 524518 178000) (nil face font-lock-variable-name-face 253 . 254) (t 26334 9856 524518 178000) (nil fontified t 252 . 253) (t 26334 9856 524518 178000) (nil face font-lock-variable-name-face 252 . 253) (t 26334 9856 524518 178000) (nil fontified t 251 . 252) (t 26334 9856 524518 178000) (nil face font-lock-variable-name-face 251 . 252) (t 26334 9856 524518 178000) (nil fontified t 250 . 251) (t 26334 9856 524518 178000) (nil face font-lock-variable-name-face 250 . 251) (t 26334 9856 524518 178000) (nil fontified t 249 . 250) (t 26334 9856 524518 178000) (nil face font-lock-variable-name-face 249 . 250) (t 26334 9856 524518 178000) (nil fontified t 248 . 249) (t 26334 9856 524518 178000) (nil face font-lock-variable-name-face 248 . 249) (t 26334 9856 524518 178000) (nil fontified t 247 . 248) (t 26334 9856 524518 178000) (nil face font-lock-variable-name-face 247 . 248) (t 26334 9856 524518 178000) (nil fontified t 246 . 247) (t 26334 9856 524518 178000) (nil face font-lock-variable-name-face 246 . 247) (t 26334 9856 524518 178000) (#("pumpState" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t) 6 7 (face font-lock-variable-name-face fontified t) 7 8 (face font-lock-variable-name-face fontified t) 8 9 (face font-lock-variable-name-face fontified t)) . -246) (t 26334 9856 524518 178000) (255 . 264) (t 26334 9856 524518 178000)) nil (26334 13651 759316 987000) 0 nil])
([nil nil ((1636 . 1639) (1625 . 1636)) nil (26334 13651 759311 254000) 0 nil])
([nil nil ((1655 . 1664) (1649 . 1656) (1643 . 1649) (1644 . 1648) (#("      " 0 6 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 1643) (1643 . 1649) (1642 . 1644) (1640 . 1643)) nil (26334 13651 759309 795000) 0 nil])
([nil nil ((1665 . 1666)) nil (26334 13651 759308 322000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1673) (undo-tree-id85 . -4) 1677 (1672 . 1677)) nil (26334 13651 759307 358000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1676 . 1677) (#("
" 0 1 (fontified nil)) . -1728) (1672 . 1729) 1667) nil (26334 13651 759305 386000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1732 . 1733) (#("
" 0 1 (fontified nil)) . -1784) (1728 . 1785) 1727) nil (26334 13651 759304 77000) 0 nil])
([nil nil ((1678 . 1682) (#("s" 0 1 (fontified t)) . -1678) (undo-tree-id83 . -1) 1679 (1677 . 1679) (1694 . 1695) (#("0" 0 1 (face font-lock-number-face fontified t)) . -1694) (undo-tree-id84 . -1) 1695) nil (26334 13651 759302 432000) 0 nil])
([nil nil ((1738 . 1743)) nil (26334 13651 759299 195000) 0 nil])
([nil nil ((1649 . 1663) (1642 . 1649) (1673 . 1687) (1666 . 1673) (1799 . 1805) (1800 . 1804) (#("      " 0 6 (face (rainbow-delimiters-depth-3-face) fontified nil)) . 1799) (1799 . 1805) (1798 . 1800) (1796 . 1799) (1792 . 1796) (1787 . 1792) (1756 . 1757) (#("0" 0 1 (face font-lock-number-face fontified t)) . -1756) (undo-tree-id66 . -1) 1757 (1767 . 1775) (#("mixer" 0 5 (fontified t)) . -1767) (undo-tree-id67 . -5) 1772 (#("," 0 1 (fontified t)) . -1776) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#(" " 0 1 (fontified t)) . -1777) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 1778 (#("2500" 0 4 (face font-lock-number-face fontified t)) . -1778) (undo-tree-id72 . -4) 1782 (#("," 0 1 (fontified t)) . -1721) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#(" " 0 1 (fontified t)) . -1722) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 1723 (#("2500" 0 4 (face font-lock-number-face fontified t)) . -1723) (undo-tree-id77 . -4) 1727 (1710 . 1717) (#("m" 0 1 (fontified t)) . -1710) (undo-tree-id78 . -1) (#("i" 0 1 (fontified t)) . -1711) (undo-tree-id79 . -1) (#("x" 0 1 (fontified t)) . -1712) (undo-tree-id80 . -1) (#("e" 0 1 (fontified t)) . -1713) (undo-tree-id81 . -1) (#("r" 0 1 (fontified t)) . -1714) (undo-tree-id82 . -1) 1715) nil (26334 13651 759295 31000) 0 nil])
([nil nil ((1638 . 1639) (#("0" 0 1 (face font-lock-number-face fontified t)) . -1638) (undo-tree-id65 . -1) 1639) nil (26334 13651 759274 269000) 0 nil])
([nil nil ((1661 . 1662) (#("1" 0 1 (face font-lock-number-face fontified t)) . -1661) (undo-tree-id64 . -1) 1662) nil (26334 13651 759272 233000) 0 nil])
([nil nil ((#("      progIndex = 1;
" 0 6 (fontified t) 6 15 (face font-lock-variable-name-face fontified t) 15 18 (fontified t) 18 19 (face font-lock-number-face fontified t) 19 20 (fontified t) 20 21 (fontified t)) . 1688) (undo-tree-id58 . -18) (undo-tree-id59 . -18) (undo-tree-id60 . -18) (undo-tree-id61 . -20) (undo-tree-id62 . -21) (undo-tree-id63 . -18) 1706) nil (26334 13651 759270 107000) 0 nil])
([nil nil ((1720 . 1721) (#("1" 0 1 (face font-lock-number-face fontified t)) . -1720) (undo-tree-id57 . -1) 1721) nil (26334 13651 759263 771000) 0 nil])
([nil nil ((1731 . 1745) (1724 . 1731)) nil (26334 13651 759261 705000) 0 nil])
([nil nil ((1798 . 1799) (#("2" 0 1 (face font-lock-number-face fontified t)) . -1798) (undo-tree-id56 . -1) 1799) nil (26334 13651 759260 528000) 0 nil])
([nil nil ((1809 . 1823) (1802 . 1809)) nil (26334 13651 759258 115000) 0 nil])
([nil nil ((1867 . 1868) (1880 . 1881) (1867 . 1880)) nil (26334 13651 759257 166000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1889) (undo-tree-id55 . -1) 1890) nil (26334 13651 759255 917000) 0 nil])
([nil nil ((#(" // mixer(220, 2500);
  dhtRead();
  fluidIn(180);
" 0 1 (fontified t) 1 21 (face font-lock-comment-face fontified t) 21 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-2-face) fontified t) 32 33 (face (rainbow-delimiters-depth-2-face) fontified t) 33 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-2-face) fontified t) 45 48 (face font-lock-number-face fontified t) 48 49 (face (rainbow-delimiters-depth-2-face) fontified t) 49 50 (fontified t) 50 51 (fontified t)) . 1911) (undo-tree-id50 . -47) (undo-tree-id51 . -20) (undo-tree-id52 . -47) (undo-tree-id53 . -50) (undo-tree-id54 . -47) 1958 (t 26334 10011 57852 122000)) nil (26334 13651 759253 758000) 0 nil])
([nil nil ((1911 . 1962)) nil (26334 13651 759248 357000) 0 nil])
([nil nil ((#(" // mixer(220, 2500);
" 0 1 (fontified t) 1 21 (face font-lock-comment-face fontified t) 21 22 (fontified t)) . 1911) (undo-tree-id45 . -12) (undo-tree-id46 . -12) (undo-tree-id47 . -12) (undo-tree-id48 . -21) (undo-tree-id49 . -12) 1923 (t 26334 10011 57852 122000)) nil (26334 13651 759247 103000) 0 nil])
([nil nil ((1443 . 1461) (t 26334 10056 854518 969000)) nil (26334 13651 759241 639000) 0 nil])
([nil nil ((1694 . 1698) (#("2" 0 1 (face font-lock-number-face fontified t)) . -1694) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("2" 0 1 (face font-lock-number-face fontified t)) . -1695) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("0" 0 1 (face font-lock-number-face fontified t)) . -1696) (undo-tree-id44 . -1) 1697 (t 26334 10076 954519 49000)) nil (26334 13651 759240 233000) 0 nil])
([nil nil ((1957 . 1964) (1955 . 1957) (#("180" 0 3 (face font-lock-number-face fontified t)) . -1955) (undo-tree-id33 . -3) 1958 (1859 . 1863) (#("220" 0 3 (face font-lock-number-face fontified t)) . -1859) (undo-tree-id34 . -3) 1862 (1779 . 1783) (#("220" 0 3 (face font-lock-number-face fontified t)) . -1779) (undo-tree-id35 . -3) 1782 (1701 . 1704) (1700 . 1701) (#("2" 0 1 (face font-lock-number-face fontified t)) . -1700) (undo-tree-id36 . -1) (#("5" 0 1 (face font-lock-number-face fontified t)) . -1701) (undo-tree-id37 . -1) (#("0" 0 1 (face font-lock-number-face fontified t)) . -1702) (undo-tree-id38 . -1) (#("0" 0 1 (face font-lock-number-face fontified t)) . -1703) (undo-tree-id39 . -1) 1704) nil (26334 13651 759232 826000) 0 nil])
([nil nil ((1947 . 1957) (#("f" 0 1 (fontified t)) . -1947) (undo-tree-id26 . -1) (#("l" 0 1 (fontified t)) . -1948) (undo-tree-id27 . -1) (#("u" 0 1 (fontified t)) . -1949) (undo-tree-id28 . -1) (#("i" 0 1 (fontified t)) . -1950) (undo-tree-id29 . -1) (#("d" 0 1 (fontified t)) . -1951) (undo-tree-id30 . -1) (#("I" 0 1 (fontified t)) . -1952) (undo-tree-id31 . -1) (#("n" 0 1 (fontified t)) . -1953) (undo-tree-id32 . -1) 1954 (t 26334 10097 387852 462000)) nil (26334 13651 759219 512000) 0 nil])
([nil nil ((#("  // put your setup code here, to run once:
" 0 2 (fontified t) 2 43 (face font-lock-comment-face fontified t) 43 44 (fontified t)) . 325) (undo-tree-id25 . -43) (t 26334 10104 857852 492000)) nil (26334 13651 759211 203000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-number-face fontified t)) . -185) (undo-tree-id21 . -1) (#("0" 0 1 (face font-lock-number-face fontified t)) . -186) (undo-tree-id22 . -1) (#("0" 0 1 (face font-lock-number-face fontified t)) . -187) (undo-tree-id23 . -1) (#("0" 0 1 (face font-lock-number-face fontified t)) . -188) (undo-tree-id24 . -1) 189 (t 26334 10140 494519 298000)) nil (26334 13651 759208 432000) 0 nil])
([nil nil ((174 . 175) (#("m" 0 1 (fontified t)) . -174) (undo-tree-id10 . -1) (#("i" 0 1 (fontified t)) . -175) (undo-tree-id11 . -1) (#("l" 0 1 (fontified t)) . -176) (undo-tree-id12 . -1) (#("l" 0 1 (fontified t)) . -177) (undo-tree-id13 . -1) (#("i" 0 1 (fontified t)) . -178) (undo-tree-id14 . -1) (#("s" 0 1 (fontified t)) . -179) (undo-tree-id15 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -180) (undo-tree-id16 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -181) (undo-tree-id17 . -1) (#(" " 0 1 (fontified t)) . -182) (undo-tree-id18 . -1) (#("-" 0 1 (fontified t)) . -183) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t)) . -184) (undo-tree-id20 . -1) 185) nil (26334 13651 759200 247000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1890) (undo-tree-id0 . -1) (#("a" 0 1 (fontified t)) . -1891) (undo-tree-id1 . -1) (#("d" 0 1 (fontified t)) . -1892) (undo-tree-id2 . -1) 1893 (1889 . 1893) (#("b" 0 1 (fontified t)) . -1889) (undo-tree-id3 . -1) (#("u" 0 1 (fontified t)) . -1890) (undo-tree-id4 . -1) (#("t" 0 1 (fontified t)) . -1891) (undo-tree-id5 . -1) (#("t" 0 1 (fontified t)) . -1892) (undo-tree-id6 . -1) (#("o" 0 1 (fontified t)) . -1893) (undo-tree-id7 . -1) (#("n" 0 1 (fontified t)) . -1894) (undo-tree-id8 . -1) (#("R" 0 1 (fontified t)) . -1895) (undo-tree-id9 . -1) 1896 (t 26334 10297 834519 920000)) nil (26334 13651 759185 924000) 0 nil])
([nil nil ((1893 . 1899)) nil (26334 13651 759154 108000) 0 nil])
([nil nil ((#("Button" 0 6 (fontified t)) . 1893) (t 26334 13533 874532 491000)) nil (26334 13791 823217 661000) 0 nil])
([nil nil ((1889 . 1896) (#("read" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1889) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (1890 . 1893)) ((#("ead" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 1890) (1889 . 1893) (#("buttonR" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 1889) (undo-tree-id1430 . -7) (undo-tree-id1431 . -7) (undo-tree-id1432 . -7) (undo-tree-id1433 . -7) (undo-tree-id1434 . -7) (undo-tree-id1435 . -7)) (26334 13798 74282 107000) 0 nil])
([nil nil ((1889 . 1899) (#("buttonR" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil)) . 1889) (undo-tree-id1438 . -7) (undo-tree-id1439 . -7) (undo-tree-id1440 . -7) (undo-tree-id1441 . -7) (undo-tree-id1442 . -7) (undo-tree-id1443 . -7)) ((1889 . 1896) (#("readButton" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 1889) (undo-tree-id1400 . -10) (undo-tree-id1401 . -10) (undo-tree-id1402 . -10) (undo-tree-id1403 . -10) (undo-tree-id1404 . -10) (undo-tree-id1405 . -10) (undo-tree-id1406 . -10) (undo-tree-id1407 . -10) (undo-tree-id1408 . -10) (undo-tree-id1409 . -10) (undo-tree-id1410 . -10) (undo-tree-id1411 . -10) (undo-tree-id1412 . -10) (undo-tree-id1413 . -10) (undo-tree-id1414 . -10) (undo-tree-id1415 . -10) (undo-tree-id1416 . -10) (undo-tree-id1417 . -10) (undo-tree-id1418 . -10) (undo-tree-id1419 . -10) (undo-tree-id1420 . -10) (undo-tree-id1421 . -10) (undo-tree-id1422 . -10) (undo-tree-id1423 . -10) (undo-tree-id1424 . -10) (undo-tree-id1425 . -10) (undo-tree-id1426 . -10) (undo-tree-id1427 . -10) (undo-tree-id1428 . -10) (undo-tree-id1429 . -10)) (26334 13798 74556 507000) 0 nil])
([nil nil ((1889 . 1899) (#("readButtonead" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil)) . 1889) (undo-tree-id1444 . -12) (undo-tree-id1445 . 3) (undo-tree-id1446 . -10) (undo-tree-id1447 . -10) (undo-tree-id1448 . -12) (undo-tree-id1449 . -10) (undo-tree-id1450 . -12) (undo-tree-id1451 . -10) (undo-tree-id1452 . -10) (undo-tree-id1453 . -10) (undo-tree-id1454 . -10) (undo-tree-id1455 . -10) (undo-tree-id1456 . -10) (undo-tree-id1457 . -10) (undo-tree-id1458 . -10) (undo-tree-id1459 . -10) (undo-tree-id1460 . -10) (undo-tree-id1461 . -10) (undo-tree-id1462 . -10) (undo-tree-id1463 . -10) (undo-tree-id1464 . -10) (undo-tree-id1465 . -10) (undo-tree-id1466 . -10) (undo-tree-id1467 . -10) (undo-tree-id1468 . -10) (undo-tree-id1469 . -10) (undo-tree-id1470 . -10) (undo-tree-id1471 . -10) (undo-tree-id1472 . -10) (undo-tree-id1473 . -10) (undo-tree-id1474 . -10) (undo-tree-id1475 . -10) (undo-tree-id1476 . -10) (undo-tree-id1477 . -10)) ((1889 . 1902) (#("readButton" 0 10 (fontified t)) . 1889) (undo-tree-id1365 . -9) (undo-tree-id1367 . -9) (undo-tree-id1369 . -9) (t 26334 13715 81199 873000)) (26334 13798 75208 819000) 0 nil] [nil nil ((#("ead" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 1899) (undo-tree-id1370 . -2) (undo-tree-id1371 . 3) (undo-tree-id1372 . -2) (undo-tree-id1373 . -2) (undo-tree-id1374 . -1) (undo-tree-id1375 . -2) (undo-tree-id1376 . -2) (undo-tree-id1377 . -2) (undo-tree-id1378 . -2) (undo-tree-id1379 . -2) (undo-tree-id1380 . -2) (undo-tree-id1381 . -2) (undo-tree-id1382 . -2) (undo-tree-id1383 . -2) (undo-tree-id1384 . -3) (undo-tree-id1385 . -3) (undo-tree-id1386 . -3) (undo-tree-id1387 . -3) (undo-tree-id1388 . -3) (undo-tree-id1389 . -3) (undo-tree-id1390 . -2) (undo-tree-id1391 . -2) (undo-tree-id1392 . -2) (undo-tree-id1393 . -2) (undo-tree-id1394 . -2) (undo-tree-id1395 . -2) (undo-tree-id1396 . -2) (undo-tree-id1397 . -1) (undo-tree-id1398 . -2) (undo-tree-id1399 . -3)) ((1899 . 1902)) (26334 13726 166215 279000) 0 nil])
([nil nil ((160 . 163) (139 . 160) (138 . 139) (t 26334 13715 81199 873000)) nil (26334 13941 225021 401000) 0 nil])
nil
([nil nil ((161 . 162) (#("1" 0 1 (face font-lock-number-face fontified t)) . -161) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) 162) nil (26334 13941 225018 933000) 0 nil])
([nil nil ((nil rear-nonsticky nil 163 . 164) (#("
" 0 1 (fontified nil)) . -188) (163 . 189) 161) nil (26334 13941 225002 292000) 0 nil])
([nil nil ((nil rear-nonsticky nil 188 . 189) (#("
" 0 1 (fontified nil)) . -213) (188 . 214) 164) nil (26334 13941 225000 498000) 0 nil])
([nil nil ((179 . 180) (#("1" 0 1 (face font-lock-variable-name-face fontified t)) . -179) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) 180) nil (26334 13941 224998 219000) 0 nil])
([nil nil ((204 . 205) (#("1" 0 1 (face font-lock-variable-name-face fontified t)) . -204) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) 205) nil (26334 13941 224987 961000) 0 nil])
([nil nil ((186 . 187) (#("4" 0 1 (face font-lock-number-face fontified t)) . -186) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) 187) nil (26334 13941 224974 206000) 0 nil])
([nil nil ((211 . 212) (#("4" 0 1 (face font-lock-number-face fontified t)) . -211) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) 212) nil (26334 13941 224953 375000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -505) (undo-tree-id1559 . -2) (undo-tree-id1560 . -2) (undo-tree-id1561 . -2) (undo-tree-id1562 . -2) (undo-tree-id1563 . -2) (undo-tree-id1564 . -2) (undo-tree-id1565 . -2) (undo-tree-id1566 . -2) (undo-tree-id1567 . -2) 507 (504 . 507) (t 26334 13941 227867 434000)) nil (26334 13966 213777 88000) 0 nil])
([nil nil ((apply 4 139 207 undo--wrap-and-run-primitive-undo 139 207 ((197 . 198) nil (196 . 197) nil (195 . 196) nil (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -195) (#<marker at 2239 in iGEM_Arduino.ino> . -1) (#<marker at 2239 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) 196 nil (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -196) (#<marker at 2239 in iGEM_Arduino.ino> . -1) (#<marker at 2239 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) 197 nil (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -197) (#<marker at 2239 in iGEM_Arduino.ino> . -1) (#<marker at 2239 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) 198 nil (#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -198) (#<marker at 2239 in iGEM_Arduino.ino> . -1) (#<marker at 2239 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) 199 nil (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -199) (#<marker at 2239 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) (#<marker at 195 in iGEM_Arduino.ino> . -1) 200 nil (174 . 175) nil (173 . 174) nil (172 . 173) nil (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -172) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) 173 nil (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -173) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) 174 nil (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -174) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) 175 nil (#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -175) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) 176 nil (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -176) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) (#<marker at 172 in iGEM_Arduino.ino> . -1) 177)) (149 . 152) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -149) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -150) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -151) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -152) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -153) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) 154) nil (26334 13966 213713 767000) 0 nil])
([nil nil ((509 . 524) (501 . 510) (498 . 501) (t 26334 13966 217867 533000)) nil (26334 13985 500701 15000) 0 nil])
([nil nil ((526 . 529) (525 . 526)) nil (26334 13985 500699 725000) 0 nil])
([nil nil ((nil rear-nonsticky nil 531 . 532) (#("
" 0 1 (fontified nil)) . -557) (529 . 558) 528) nil (26334 13985 500698 607000) 0 nil])
([nil nil ((nil rear-nonsticky nil 559 . 560) (#("
" 0 1 (fontified nil)) . -585) (557 . 586) 532) nil (26334 13985 500697 279000) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t) 2 3 (fontified t)) . 527) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -2) (undo-tree-id1586 . -2) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -3) (undo-tree-id1613 . -3) 528) nil (26334 13985 500694 532000) 0 nil])
([nil nil ((540 . 541) (#("1" 0 1 (fontified t)) . -540) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) 541) nil (26334 13985 500657 206000) 0 nil])
([nil nil ((568 . 569) (#("1" 0 1 (fontified t)) . -568) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) 569) nil (26334 13985 500644 51000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 583) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (t 26334 13985 501200 943000)) nil (26334 14040 335010 352000) 0 nil])
([nil nil ((608 . 611) (607 . 608) (599 . 607) (586 . 600) (584 . 586) (#("  " 0 2 (fontified nil)) . 583) (undo-tree-id1628 . -2) (undo-tree-id1629 . -2) (undo-tree-id1630 . -2) (582 . 586)) nil (26334 14040 335004 926000) 0 nil])
([nil nil ((612 . 613)) nil (26334 14040 334996 125000) 0 nil])
([nil nil ((nil rear-nonsticky nil 615 . 616) (#("
" 0 1 (fontified nil)) . -643) (613 . 644) 612) nil (26334 14040 334994 672000) 0 nil])
([nil nil ((nil rear-nonsticky nil 645 . 646) (#("
" 0 1 (fontified nil)) . -673) (643 . 674) 616) nil (26334 14040 334992 410000) 0 nil])
([nil nil ((632 . 633) (#("1" 0 1 (fontified t)) . -632) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) 633) nil (26334 14040 334988 517000) 0 nil])
([nil nil ((662 . 663) (#("1" 0 1 (fontified t)) . -662) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) 663) nil (26334 14040 334966 620000) 0 nil])
([nil nil ((152 . 153) (#("1" 0 1 (face font-lock-variable-name-face fontified t)) . -152) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) 153 (t 26334 14040 337867 824000)) nil (26334 14081 35983 375000) 0 nil])
([nil nil ((175 . 176) (#("2" 0 1 (face font-lock-variable-name-face fontified t)) . -175) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) 176) nil (26334 14081 35972 146000) 0 nil])
([nil nil ((198 . 199) (#("3" 0 1 (face font-lock-variable-name-face fontified t)) . -198) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) 199) nil (26334 14081 35962 892000) 0 nil])
([nil nil ((512 . 513) (#("1" 0 1 (fontified t)) . -512) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) 513) nil (26334 14081 35953 740000) 0 nil])
([nil nil ((540 . 541) (#("2" 0 1 (fontified t)) . -540) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) 541) nil (26334 14081 35943 624000) 0 nil])
([nil nil ((568 . 569) (#("3" 0 1 (fontified t)) . -568) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) 569) nil (26334 14081 35933 163000) 0 nil])
([nil nil ((602 . 603) (#("1" 0 1 (fontified t)) . -602) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) 603) nil (26334 14081 35921 788000) 0 nil])
([nil nil ((632 . 633) (#("2" 0 1 (fontified t)) . -632) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) 633) nil (26334 14081 35909 695000) 0 nil])
([nil nil ((662 . 663) (#("3" 0 1 (fontified t)) . -662) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) 663) nil (26334 14081 35895 13000) 0 nil])
([nil nil ((608 . 612) (#("L" 0 1 (fontified t)) . -608) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (#("O" 0 1 (fontified t)) . -609) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (#("W" 0 1 (fontified t)) . -610) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) 611 (t 26334 14081 37867 984000)) nil (26334 14089 219324 563000) 0 nil])
([nil nil ((1632 . 1641) (1614 . 1633) (1612 . 1614) (t 26334 14089 221201 350000)) nil (26334 14183 596840 335000) 0 nil])
([nil nil ((1659 . 1661) (1651 . 1659) (1647 . 1652) (1645 . 1647) (#("  " 0 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 1645) (1645 . 1647) (1644 . 1646) (1642 . 1645) (#(";" 0 1 (fontified t)) . -1642) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) 1643 (1642 . 1643)) nil (26334 14183 596838 595000) 0 nil])
([nil nil ((1682 . 1687) (1676 . 1683) (#("w" 0 1 (fontified t)) . -1676) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) 1677 (1669 . 1677) (1665 . 1669) (1666 . 1668) (#("    " 0 4 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 1665) (1665 . 1669) (1664 . 1666) (1662 . 1665)) nil (26334 14183 596831 291000) 0 nil])
([nil nil ((#("    digitalWrite(light)
" 0 4 (fontified t) 4 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-3-face) fontified t) 17 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-3-face) fontified t) 23 24 (fontified t)) . 1665) (undo-tree-id1998 . -22) (undo-tree-id1999 . 2) (undo-tree-id2000 . -22) (undo-tree-id2001 . -22) (undo-tree-id2002 . -23) (undo-tree-id2003 . 1) (undo-tree-id2004 . -4) (undo-tree-id2005 . -4) (undo-tree-id2006 . -5) (undo-tree-id2007 . -5) (undo-tree-id2008 . -6) (undo-tree-id2009 . -7) (undo-tree-id2010 . -8) (undo-tree-id2011 . -9) (undo-tree-id2012 . -10) (undo-tree-id2013 . -11) (undo-tree-id2014 . -11) (undo-tree-id2015 . -11) (undo-tree-id2016 . -12) (undo-tree-id2017 . -13) (undo-tree-id2018 . -14) (undo-tree-id2019 . -15) (undo-tree-id2020 . -16) (undo-tree-id2021 . -17) (undo-tree-id2022 . -17) (undo-tree-id2023 . -18) (undo-tree-id2024 . -19) (undo-tree-id2025 . -20) (undo-tree-id2026 . -21) (undo-tree-id2027 . -22) (undo-tree-id2028 . -22) (undo-tree-id2029 . -21) (undo-tree-id2030 . -21) (undo-tree-id2031 . -21) (undo-tree-id2032 . -21) (undo-tree-id2033 . -21) (undo-tree-id2034 . -22) (undo-tree-id2035 . -22) (undo-tree-id2036 . -22) (undo-tree-id2037 . -22) (undo-tree-id2038 . -22) (undo-tree-id2039 . -22) (undo-tree-id2040 . -22) (undo-tree-id2041 . -22) (undo-tree-id2042 . -22) (undo-tree-id2043 . -22) (undo-tree-id2044 . -22) (undo-tree-id2045 . -22) (undo-tree-id2046 . -22) (undo-tree-id2047 . -22) (undo-tree-id2048 . -22) (undo-tree-id2049 . -22) (undo-tree-id2050 . -24) (undo-tree-id2051 . -24) 1687) nil (26334 14183 596824 649000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1666 . 1667) (1665 . 1756)) nil (26334 14183 596770 635000) 0 nil])
([nil nil ((1732 . 1734) 1736 (1700 . 1702) 1702 (1667 . 1669)) nil (26334 14183 596769 625000) 0 nil])
([nil nil ((1620 . 1622) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -1620) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (#("g" 0 1 (face font-lock-function-name-face fontified t)) . -1621) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -1622) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -1623) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) 1624) nil (26334 14183 596766 222000) 0 nil])
([nil nil ((1634 . 1642) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -1634) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1635) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -1636) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -1637) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1638) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) 1639) nil (26334 14183 596712 183000) 0 nil])
([nil nil ((1657 . 1660) (1652 . 1657) (#("l" 0 1 (fontified t)) . -1652) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (#("i" 0 1 (fontified t)) . -1653) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (#("g" 0 1 (fontified t)) . -1654) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (#("h" 0 1 (fontified t)) . -1655) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (#("t" 0 1 (fontified t)) . -1656) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) 1657) nil (26334 14183 596600 988000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1771 . 1772) (#("
" 0 1 (fontified nil)) . -1893) (1769 . 1894) 1768 (t 26334 14183 597868 390000)) nil (26334 14227 117207 579000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1895 . 1896) (#("
" 0 1 (fontified nil)) . -2017) (1893 . 2018) 1892) nil (26334 14227 117205 986000) 0 nil])
([nil nil ((1772 . 1777)) nil (26334 14227 117204 829000) 0 nil])
([nil nil ((1901 . 1906)) nil (26334 14227 117204 204000) 0 nil])
([nil nil ((1793 . 1794) (#("0" 0 1 (face font-lock-number-face fontified t)) . -1793) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) 1794) nil (26334 14227 117202 898000) 0 nil])
([nil nil ((1824 . 1827) (#("H" 0 1 (fontified t)) . -1824) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (#("I" 0 1 (fontified t)) . -1825) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (#("G" 0 1 (fontified t)) . -1826) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (#("H" 0 1 (fontified t)) . -1827) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) 1828) nil (26334 14227 117189 659000) 0 nil])
([nil nil ((1856 . 1860) (#("L" 0 1 (fontified t)) . -1856) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (#("O" 0 1 (fontified t)) . -1857) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (#("W" 0 1 (fontified t)) . -1858) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) 1859) nil (26334 14227 117139 662000) 0 nil])
([nil nil ((1922 . 1923) (#("0" 0 1 (face font-lock-number-face fontified t)) . -1922) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) 1923) nil (26334 14227 117105 436000) 0 nil])
([nil nil ((1953 . 1956) (#("H" 0 1 (fontified t)) . -1953) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (#("I" 0 1 (fontified t)) . -1954) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (#("G" 0 1 (fontified t)) . -1955) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (#("H" 0 1 (fontified t)) . -1956) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) 1957) nil (26334 14227 117090 323000) 0 nil])
([nil nil ((2017 . 2021) (#("L" 0 1 (fontified t)) . -2017) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (#("O" 0 1 (fontified t)) . -2018) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (#("W" 0 1 (fontified t)) . -2019) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) 2020) nil (26334 14227 117002 958000) 0 nil])
([nil nil ((2037 . 2041) (2038 . 2040) (#("    " 0 4 (face (rainbow-delimiters-depth-2-face) fontified nil)) . 2037) (2037 . 2041) (2036 . 2038) (2030 . 2037) (2027 . 2030) (t 26334 14227 121201 895000)) nil (26334 14251 840023 943000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2045 . 2046) (#("
" 0 1 (fontified nil)) . -2138) (2041 . 2139) 2040) nil (26334 14251 840020 445000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 2037) (undo-tree-id2300 . -2) (undo-tree-id2301 . 2) (undo-tree-id2302 . -2) (undo-tree-id2303 . -2) (undo-tree-id2304 . -4) (undo-tree-id2305 . -4) (undo-tree-id2306 . -4) (undo-tree-id2307 . -3) (undo-tree-id2308 . -3) (undo-tree-id2309 . -3) (undo-tree-id2310 . -3) (undo-tree-id2311 . -3) (undo-tree-id2312 . -3) (undo-tree-id2313 . -3) (undo-tree-id2314 . -3) (undo-tree-id2315 . -3) (undo-tree-id2316 . -3) (undo-tree-id2317 . -3) (undo-tree-id2318 . -3) (undo-tree-id2319 . -3) (undo-tree-id2320 . -3) (undo-tree-id2321 . -3) (undo-tree-id2322 . -3) (undo-tree-id2323 . -3) (undo-tree-id2324 . -3) (undo-tree-id2325 . -3) (undo-tree-id2326 . -3) (undo-tree-id2327 . -2) (undo-tree-id2328 . -2) (undo-tree-id2329 . -2) (undo-tree-id2330 . -2) (undo-tree-id2331 . -2) (undo-tree-id2332 . -2) (undo-tree-id2333 . -2) (undo-tree-id2334 . -2) (undo-tree-id2335 . -2) (undo-tree-id2336 . -2) (undo-tree-id2337 . -2) (undo-tree-id2338 . -2) (undo-tree-id2339 . -2) (undo-tree-id2340 . -2) (undo-tree-id2341 . -2) (undo-tree-id2342 . -5) (undo-tree-id2343 . -5) 2039) nil (26334 14251 840014 154000) 0 nil])
([nil nil ((2063 . 2066) (#("H" 0 1 (fontified t)) . -2063) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (#("I" 0 1 (fontified t)) . -2064) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (#("G" 0 1 (fontified t)) . -2065) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (#("H" 0 1 (fontified t)) . -2066) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) 2067) nil (26334 14251 839932 380000) 0 nil])
([nil nil ((#("  else {
    digitalWrite(led0Pin, LOW);
    digitalWrite(led1Pin, LOW);
    digitalWrite(led2Pin, LOW);
  }
" 0 2 (fontified t) 2 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 8 (face (rainbow-delimiters-depth-2-face) fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t rear-nonsticky t) 11 12 (fontified t) 12 13 (rear-nonsticky t fontified t) 13 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-3-face) fontified t) 26 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-3-face) fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t rear-nonsticky t) 43 45 (fontified t) 45 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-3-face) fontified t) 58 70 (fontified t) 70 71 (face (rainbow-delimiters-depth-3-face) fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t rear-nonsticky t) 75 77 (fontified t) 77 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-3-face) fontified t) 90 102 (fontified t) 102 103 (face (rainbow-delimiters-depth-3-face) fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 107 (fontified t) 107 108 (face (rainbow-delimiters-depth-2-face) fontified t) 108 109 (fontified t)) . 2028) (undo-tree-id2344 . -108) (undo-tree-id2345 . 71) (undo-tree-id2346 . -7) (undo-tree-id2347 . -108) (undo-tree-id2348 . -108) (undo-tree-id2349 . -9) (undo-tree-id2350 . -9) (undo-tree-id2351 . -9) (undo-tree-id2352 . -9) (undo-tree-id2353 . -9) (undo-tree-id2354 . -9) (undo-tree-id2355 . -9) (undo-tree-id2356 . -6) (undo-tree-id2357 . -6) (undo-tree-id2358 . -9) (undo-tree-id2359 . -9) (undo-tree-id2360 . -9) (undo-tree-id2361 . -9) (undo-tree-id2362 . -9) (undo-tree-id2363 . -9) (undo-tree-id2364 . -9) (undo-tree-id2365 . -9) (undo-tree-id2366 . -9) (undo-tree-id2367 . -9) (undo-tree-id2368 . -9) (undo-tree-id2369 . -9) (undo-tree-id2370 . -9) (undo-tree-id2371 . -9) (undo-tree-id2372 . -9) (undo-tree-id2373 . -9) (undo-tree-id2374 . -9) (undo-tree-id2375 . -9) (undo-tree-id2376 . -9) (undo-tree-id2377 . -9) (undo-tree-id2378 . -9) (undo-tree-id2379 . -9) (undo-tree-id2380 . -9) (undo-tree-id2381 . -9) (undo-tree-id2382 . -9) (undo-tree-id2383 . -9) (undo-tree-id2384 . -9) (undo-tree-id2385 . -9) (undo-tree-id2386 . -9) (undo-tree-id2387 . -9) (undo-tree-id2388 . -35) (undo-tree-id2389 . -35) (undo-tree-id2390 . -35) (undo-tree-id2391 . -35) (undo-tree-id2392 . -35) (undo-tree-id2393 . -35) (undo-tree-id2394 . -35) (undo-tree-id2395 . -35) (undo-tree-id2396 . -35) (undo-tree-id2397 . -35) (undo-tree-id2398 . -35) (undo-tree-id2399 . -37) (undo-tree-id2400 . -37) (undo-tree-id2401 . -37) (undo-tree-id2402 . -37) (undo-tree-id2403 . -37) (undo-tree-id2404 . -7) (undo-tree-id2405 . -7) (undo-tree-id2406 . -7) (undo-tree-id2407 . -7) (undo-tree-id2408 . -7) (undo-tree-id2409 . -7) (undo-tree-id2410 . -7) (undo-tree-id2411 . -7) (undo-tree-id2412 . -7) (undo-tree-id2413 . -7) (undo-tree-id2414 . -7) (undo-tree-id2415 . -7) (undo-tree-id2416 . -16) (undo-tree-id2417 . -16) (undo-tree-id2418 . -16) (undo-tree-id2419 . -16) (undo-tree-id2420 . -16) (undo-tree-id2421 . -48) (undo-tree-id2422 . -48) (undo-tree-id2423 . -48) (undo-tree-id2424 . -48) (undo-tree-id2425 . -48) (undo-tree-id2426 . -80) (undo-tree-id2427 . -80) (undo-tree-id2428 . -80) (undo-tree-id2429 . -80) (undo-tree-id2430 . -80) (undo-tree-id2431 . -108) (undo-tree-id2432 . -108) (undo-tree-id2433 . -108) (undo-tree-id2434 . -108) (undo-tree-id2435 . -108) (undo-tree-id2436 . -108) (undo-tree-id2437 . -108) (undo-tree-id2438 . -108) (undo-tree-id2439 . -37) (undo-tree-id2440 . -108) (undo-tree-id2441 . -108) (undo-tree-id2442 . -105) (undo-tree-id2443 . -108) (undo-tree-id2444 . -109) (undo-tree-id2445 . -109) 2136 (t 26334 14251 844535 326000)) nil (26334 14265 685599 287000) 0 nil])
([nil nil ((2254 . 2259) (2243 . 2255) (2238 . 2243) (t 26334 14265 687868 714000)) nil (26334 14310 344176 589000) 0 nil])
([nil nil ((#("    ledControl(progI)
" 0 4 (fontified t) 4 14 (fontified t) 14 15 (face (rainbow-delimiters-depth-3-face) fontified t) 15 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-3-face) fontified t) 21 22 (fontified t)) . 2239) (undo-tree-id2446 . -19) (undo-tree-id2447 . 2) (undo-tree-id2448 . -19) (undo-tree-id2449 . -19) (undo-tree-id2450 . -21) (undo-tree-id2451 . -4) (undo-tree-id2452 . -4) (undo-tree-id2453 . -4) (undo-tree-id2454 . -4) (undo-tree-id2455 . -4) (undo-tree-id2456 . -5) (undo-tree-id2457 . -6) (undo-tree-id2458 . -7) (undo-tree-id2459 . -8) (undo-tree-id2460 . -9) (undo-tree-id2461 . -10) (undo-tree-id2462 . -11) (undo-tree-id2463 . -12) (undo-tree-id2464 . -13) (undo-tree-id2465 . -14) (undo-tree-id2466 . -14) (undo-tree-id2467 . -15) (undo-tree-id2468 . -16) (undo-tree-id2469 . -16) (undo-tree-id2470 . -17) (undo-tree-id2471 . -18) (undo-tree-id2472 . -19) (undo-tree-id2473 . -20) (undo-tree-id2474 . -20) (undo-tree-id2475 . -19) (undo-tree-id2476 . -19) (undo-tree-id2477 . -19) (undo-tree-id2478 . -19) (undo-tree-id2479 . -19) (undo-tree-id2480 . -19) (undo-tree-id2481 . -19) (undo-tree-id2482 . -19) (undo-tree-id2483 . -19) (undo-tree-id2484 . -19) (undo-tree-id2485 . -19) (undo-tree-id2486 . -19) (undo-tree-id2487 . -19) (undo-tree-id2488 . -19) (undo-tree-id2489 . -19) (undo-tree-id2490 . -22) (undo-tree-id2491 . -22) 2258) nil (26334 14310 344173 353000) 0 nil])
([nil nil ((2530 . 2539) (2519 . 2531) (2514 . 2519)) nil (26334 14310 344109 836000) 0 nil])
([nil current ((2540 . 2541)) nil (26334 14310 344104 115000) 0 nil])
nil
